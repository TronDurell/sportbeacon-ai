name: 10x Vanguard Expansion CI/CD

on:
  push:
    branches: [ main, vanguard-10x, vanguard-polish-phase ]
    paths:
      - 'lib/chapters/**'
      - 'lib/i18n/**'
      - 'lib/grants/**'
      - 'lib/edu/**'
      - 'lib/studio/**'
      - 'lib/civic/**'
      - '__tests__/*.test.ts'
      - 'scripts/e2e-10x.ts'
      - 'package.json'
  pull_request:
    branches: [ main, vanguard-10x ]
    paths:
      - 'lib/chapters/**'
      - 'lib/i18n/**'
      - 'lib/grants/**'
      - 'lib/edu/**'
      - 'lib/studio/**'
      - 'lib/civic/**'
      - '__tests__/*.test.ts'
      - 'scripts/e2e-10x.ts'

env:
  NODE_VERSION: '18'
  COVERAGE_THRESHOLD: 80

jobs:
  # Unit Tests for Vanguard Modules
  test-vanguard-modules:
    name: Test Vanguard Modules
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        module: [chapters, i18n, grants, edu, studio, civic]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.module }} module tests
        run: npm run test:${{ matrix.module }}

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: vanguard-${{ matrix.module }}
          name: vanguard-${{ matrix.module }}-coverage

  # Integration Tests
  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test-vanguard-modules
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test:vanguard

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload integration coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: vanguard-integration
          name: vanguard-integration-coverage

  # E2E Tests
  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test-integration
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e:10x

      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: |
            test-results/
            coverage/

  # Code Quality
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript
        run: npx tsc --noEmit

      - name: Run security audit
        run: npm audit --audit-level moderate

  # Build and Deploy
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test-e2e, code-quality]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/vanguard-10x'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to staging
        if: github.ref == 'refs/heads/vanguard-10x'
        run: |
          echo "Deploying to staging environment..."
          # Add staging deployment logic here

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production environment..."
          # Add production deployment logic here

  # Performance Testing
  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run performance tests
        run: |
          echo "Running performance tests for Vanguard modules..."
          # Add performance testing logic here

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-results
          path: performance-results/

  # Security Scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Documentation Generation
  docs-generation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    needs: test-e2e
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate API documentation
        run: |
          echo "Generating API documentation for Vanguard modules..."
          # Add documentation generation logic here

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: vanguard-docs
          path: docs/api/

  # Notifications
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [test-e2e, build-and-deploy, security-scan]
    if: always()
    
    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "✅ All Vanguard 10x tests passed successfully!"
          # Add success notification logic here

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Vanguard 10x tests failed!"
          # Add failure notification logic here

  # Coverage Badge Update
  update-coverage-badge:
    name: Update Coverage Badge
    runs-on: ubuntu-latest
    needs: test-integration
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage badge
        run: npm run test:badge

      - name: Commit coverage badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage-badges/
          git commit -m "Update coverage badges for Vanguard 10x" || exit 0
          git push 